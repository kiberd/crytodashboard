{"version":3,"sources":["context.js","Location/Location.js","List/List.js","App.js","index.js"],"names":["Context","React","createContext","initialState","place","visablestatus","visable","url","visablestatusroute","myposition","lat","lng","reducer","state","action","type","value","Error","ContextProvider","children","useReducer","contextDispatch","Provider","Location","props","containerRef","useRef","useState","map","setMap","markers","setMarkers","useContext","bounds","placeData","height","addMarker","position","index","infowindow","kakao","maps","InfoWindow","zIndex","marker","Marker","event","addListener","clickListener","makeOverListener","makeOutListener","newMarker","push","place_url","setContent","place_name","open","close","setMarkersMap","i","length","useEffect","container","current","options","center","LatLng","level","Map","setBounds","y","x","panTo","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","image","addMyPositionMarker","className","ref","id","style","width","List","result","resultData","data","class","onClick","address_name","alert","directionUrl","geocoder","services","Geocoder","coord","coord2Address","getLng","getLat","status","Status","OK","address","getDirection","App","ps","Places","getCurrentPosition","setPs","keywordInput","setResultData","setPlaceData","mobileMap","searchPlaces","keyword","replace","keywordSearch","placesSearchCB","navigator","geolocation","coords","latitude","longitude","LatLngBounds","extend","ZERO_RESULT","ERROR","placeholder","marginBottom","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b5aa489.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\n// context를 생성한 후 export 한다\r\nexport const Context = React.createContext();\r\n\r\n// state의 초기 값을 설정한다\r\nconst initialState = {\r\n    place: '',\r\n    visablestatus: {\r\n        visable: true,\r\n        url: ''\r\n    },\r\n    visablestatusroute: {\r\n        visable: false,\r\n        url: ''\r\n    },\r\n    myposition: {\r\n        lat: '',\r\n        lng: ''\r\n    }\r\n};\r\n\r\n\r\n// reducer는 action에서 받은 type에 따라서 state를 변경한다.\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGESELECTEDPLACE\":\r\n            return {\r\n                ...state,\r\n                place: action.value,\r\n            };\r\n        case \"CHANGEVISABLE\":\r\n            return {\r\n                ...state,\r\n                visablestatus: action.visablestatus,\r\n            };\r\n        case \"CHANGEVISABLEROUTE\":\r\n            return {\r\n                ...state,\r\n                visablestatusroute: action.visablestatusroute,\r\n            };\r\n\r\n        case \"SETPOSITION\":\r\n            return {\r\n                ...state,\r\n                myposition: action.myposition,\r\n            };\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    // useReducer를 사용해서 state와 dispatch를 생성한다.\r\n    const [state, contextDispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <Context.Provider\r\n            //provider에 value props로 state와 dispatch를 내려준다.\r\n            value={{ place: state.place, visablestatus: state.visablestatus, visablestatusroute: state.visablestatusroute, myposition: state.myposition, contextDispatch }}\r\n        >\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport default ContextProvider;","/*global kakao*/\r\nimport React, { useContext, useEffect, useState, useRef } from 'react'\r\nimport './Location.css'\r\nimport { Context } from \"../context\";\r\n\r\nconst Location = (props) => {\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const [map, setMap] = useState();\r\n  const [markers, setMarkers] = useState([]);\r\n  const { place, myposition, contextDispatch } = useContext(Context);\r\n\r\n\r\n  const bounds = props.bounds;\r\n  const placeData = props.placeData;\r\n  const height = props.height;\r\n\r\n\r\n  // Add Maker on map\r\n  const addMarker = (position, index) => {\r\n\r\n    const infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n    const marker = new kakao.maps.Marker({\r\n      position: position\r\n    });\r\n\r\n    kakao.maps.event.addListener(marker, 'click', clickListener(index));\r\n    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow, index));\r\n    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n\r\n    // Setmap for marker\r\n    marker.setMap(map);\r\n\r\n    // Add marker to markers array\r\n    let newMarker = markers;\r\n    newMarker.push(marker);\r\n    setMarkers(newMarker);\r\n\r\n  }\r\n\r\n  const addMyPositionMarker = (position) => {\r\n\r\n    const imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png',\r\n          imageSize = new kakao.maps.Size(32, 35), \r\n          imageOption = {offset: new kakao.maps.Point(27, 69)}; \r\n    \r\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n   \r\n    const marker = new kakao.maps.Marker({\r\n      position: position,\r\n      image: markerImage\r\n    });\r\n\r\n    // Setmap for marker\r\n    marker.setMap(map);\r\n  }\r\n\r\n  // Click\r\n  const clickListener = (index) => {\r\n    return function () {\r\n      if (index) {\r\n        contextDispatch({ type: \"CHANGEVISABLE\", visablestatus: { visable: false, url: placeData[index].place_url } });\r\n      }\r\n      else {\r\n        contextDispatch({ type: \"CHANGEVISABLE\", visablestatus: { visable: false, url: place.place_url } });\r\n      }\r\n    };\r\n  }\r\n\r\n  // MouseOver\r\n  const makeOverListener = (map, marker, infowindow, index) => {\r\n    return function () {\r\n      if (index) {\r\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + placeData[index].place_name + '</div>');\r\n      }\r\n      else {\r\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n      }\r\n      infowindow.open(map, marker);\r\n    };\r\n  }\r\n\r\n  // MouseOut\r\n  const makeOutListener = (infowindow) => {\r\n    return function () {\r\n      infowindow.close();\r\n    };\r\n  }\r\n\r\n\r\n  // Control markers in map\r\n  const setMarkersMap = (map) => {\r\n    for (var i = 0; i < markers.length; i++) {\r\n      markers[i].setMap(map);\r\n    }\r\n  }\r\n\r\n  // ComponentDidMount -> make map and set\r\n  useEffect(() => {\r\n\r\n    const container = containerRef.current;\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.566826, 126.9786567), // 서울시청\r\n      level: 3\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    setMap(map);\r\n  }, [])\r\n\r\n\r\n  // ComponentDidUpdate(placeData) -> 검색결과 (15개)\r\n  useEffect(() => {\r\n\r\n    // 선택된 place 값 초기화 -> 모든 마커 그림 \r\n    contextDispatch({ type: \"CHANGESELECTEDPLACE\", value: '' });\r\n\r\n    // 검색된 장소 위치를 기준으로 지도 범위를 재설정\r\n    if (typeof map !== 'undefined' && typeof bounds !== 'undefined') {\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    // 선택된 장소가 없을때는 모든 마커를 그림\r\n    if (typeof map !== 'undefined' && typeof placeData !== 'undefined') {\r\n      setMarkersMap(null);\r\n      for (let i = 0; i < placeData.length; i++) {\r\n        const position = new kakao.maps.LatLng(placeData[i].y, placeData[i].x);\r\n        addMarker(position, i);\r\n      }\r\n    }\r\n\r\n  }, [placeData])\r\n\r\n\r\n  // ComponentDidUpdate(place) -> 리스트 중 클릭 했을때\r\n  useEffect(() => {\r\n    if (typeof map !== 'undefined' && place !== '') {\r\n      setMarkersMap(null);\r\n      const position = new kakao.maps.LatLng(place.y, place.x);\r\n      map.panTo(position);\r\n      addMarker(position);\r\n    }\r\n  }, [place])\r\n\r\n  // ComponentDidUpdate (myposition)\r\n  useEffect(() => {\r\n    if (typeof map !== 'undefined') {\r\n      const position = new kakao.maps.LatLng(myposition.lat, myposition.lng);\r\n      map.panTo(position);\r\n      addMyPositionMarker(position);\r\n    }\r\n  }, [myposition])\r\n\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <div ref={containerRef} id=\"map\" style={{ width: \"auto\", height: height }} ></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Location;","/*global kakao*/\r\nimport React, { useContext } from 'react'\r\n\r\nimport 'bulma/css/bulma.min.css';\r\nimport './List.css'\r\nimport { Context } from \"../context\";\r\n\r\nconst List = (props) => {\r\n\r\n    const result = props.resultData;\r\n    const { myposition, contextDispatch } = useContext(Context);\r\n\r\n    const getDirection = (data) => {\r\n\r\n\r\n        if (myposition.lat === '') {\r\n            alert('내 위치를 찾을 수 없습니다! 출발지를 입력해 주세요.');\r\n            const directionUrl = 'https://map.kakao.com/link/to/' + data.id ;\r\n            contextDispatch({ type: \"CHANGEVISABLEROUTE\", visablestatusroute: { visable: true, url: directionUrl } });\r\n        }\r\n\r\n        else {\r\n\r\n            const geocoder = new kakao.maps.services.Geocoder();\r\n            const coord = new kakao.maps.LatLng(myposition.lat, myposition.lng);\r\n    \r\n            const callback = function (result, status) {\r\n                if (status === kakao.maps.services.Status.OK) {\r\n                    const directionUrl = 'https://map.kakao.com/?sName=' + result[0].address.address_name + '&eName=' + data.place_name;\r\n                    contextDispatch({ type: \"CHANGEVISABLEROUTE\", visablestatusroute: { visable: true, url: directionUrl } });\r\n                }\r\n            };\r\n            geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if (typeof result === 'undefined') {\r\n        return (\r\n            <div>키워드를 입력해 주세요</div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n                {\r\n                    result.map((data) => (\r\n                        <>\r\n                            \r\n                            <div className=\"list\">\r\n                                <a class=\"card\" onClick={() => contextDispatch({ type: \"CHANGESELECTEDPLACE\", value: data })} >\r\n                                    <div class=\"card-content\">\r\n                                        <div class=\"media\">\r\n                                            <div class=\"media-content\">\r\n                                                <p class=\"title is-4\">{data.place_name}</p>\r\n                                                <p class=\"subtitle is-6\">{data.address_name}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <a class=\"button is-info\" onClick={() => getDirection(data)} >길찾기</a>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                            <hr></hr>\r\n                        </>\r\n                    ))\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","/*global kakao*/\r\nimport './App.css';\r\nimport 'bulma/css/bulma.min.css';\r\nimport React, { useState, useEffect, useRef, useContext } from 'react'\r\n\r\n\r\nimport './Location/Location.js'\r\nimport Location from './Location/Location.js';\r\nimport List from './List/List.js'\r\n\r\n\r\nimport { Context } from \"./context\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    // 마운트 된 후 카카오 서비스 객체 선언후 상태값에 주입\r\n    const ps = new kakao.maps.services.Places();\r\n    getCurrentPosition();\r\n    setPs(ps);\r\n    // mobileMap.current.style.display = 'none';\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  const { visablestatus, visablestatusroute, myposition, contextDispatch } = useContext(Context);\r\n\r\n\r\n\r\n\r\n  // 검색 키워드 ref\r\n  const keywordInput = useRef();\r\n  // 검색 결과 상태값\r\n  const [resultData, setResultData] = useState();\r\n\r\n  // 지도에 마커 찍기위해 넘겨줄 placedata\r\n  const [placeData, setPlaceData] = useState();\r\n\r\n  // 지도 범위 재설정 위한 상태값\r\n  const [bounds, setBounds] = useState();\r\n\r\n  // 카카오 서비스 객체 상태값 \r\n  const [ps, setPs] = useState();\r\n\r\n  const mobileMap = useRef(null);\r\n\r\n\r\n  // 검색 버튼 누르면 키워드 서치 call\r\n  const searchPlaces = () => {\r\n\r\n    // 지도 화면 on\r\n    contextDispatch({ type: \"CHANGEVISABLE\", visablestatus: { visable: true, url: '' } });\r\n    contextDispatch({ type: \"CHANGEVISABLEROUTE\", visablestatusroute: { visable: false, url: '' } });\r\n    const keyword = keywordInput.current.value;\r\n\r\n    if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n      alert('키워드를 입력해주세요!');\r\n      return false;\r\n    }\r\n\r\n    else {\r\n      ps.keywordSearch(keyword, placesSearchCB);\r\n\r\n    }\r\n  }\r\n\r\n  const getCurrentPosition = () => {\r\n\r\n    if (navigator) {\r\n\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n        contextDispatch({ type: \"SETPOSITION\", myposition: { lat: position.coords.latitude, lng: position.coords.longitude } });\r\n      });\r\n    }\r\n    else {\r\n      alert('내 위치를 가져올 수 없습니다.');\r\n    }\r\n  }\r\n\r\n  // Callback function after search\r\n  const placesSearchCB = (data, status) => {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n\r\n      const bounds = new kakao.maps.LatLngBounds();\r\n\r\n      // 지도 범위 계산 (bounds)\r\n      for (let i = 0; i < data.length; i++) {\r\n        bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n      }\r\n\r\n      // 지도 범위 상태값 set\r\n      setBounds(bounds);\r\n      // 마커 데이터 상태값 set\r\n      setPlaceData(data);\r\n      // 검색 결과 리스트로 넘겨줄 상태값에 set\r\n      setResultData(data);\r\n\r\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n\r\n      alert('검색 결과가 존재하지 않습니다.');\r\n      return;\r\n\r\n    } else if (status === kakao.maps.services.Status.ERROR) {\r\n\r\n      alert('검색 결과 중 오류가 발생했습니다.');\r\n      return;\r\n\r\n    }\r\n  }\r\n\r\n  const mapControl = () => {\r\n\r\n    console.log(mobileMap.current);\r\n\r\n    if (mobileMap.current.style.display === 'block') {\r\n      mobileMap.current.style.display = 'none';\r\n    }\r\n    else {\r\n      mobileMap.current.style.display = 'block';\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n\r\n\r\n\r\n      <div className=\"App-header\">\r\n        <div class=\"columns is-mobile\">\r\n          <div class=\"column is-2-desktop is-three-fifths-mobile\">\r\n            <input class=\"input\" type=\"text\" placeholder=\"키워드 입력\" ref={keywordInput}></input>\r\n          </div>\r\n          <div class=\"column is-1-desktop\">\r\n            <a class=\"button is-primary\" onClick={searchPlaces}>검색</a>\r\n          </div>\r\n\r\n          {/* <div class=\"column is-1-desktop is-hidden-desktop\" >\r\n            <a class=\"button is-primary\" onClick={mapControl}>Map</a>\r\n          </div> */}\r\n\r\n          {/* <div class=\"column is-1\">\r\n                <a class=\"button is-primary\" onClick={getCurrentPosition}>내 위치</a>\r\n              </div> */}\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <hr></hr>\r\n      {\r\n        visablestatusroute.visable ?\r\n          <div class=\"columns\">\r\n            <div class=\"column\">\r\n              <a class=\"button is-small is-link\" style={{ marginBottom: 1 + 'em' }} onClick={searchPlaces}>돌아가기</a>\r\n              <iframe src={visablestatusroute.url} width='100%' height='750px' ></iframe>\r\n            </div>\r\n          </div>\r\n          :\r\n          <>\r\n            <div class=\"columns\">\r\n\r\n              {/* 데스크탑 지도영역 및 세부정보*/}\r\n              <div class=\"column is-hidden-mobile\">\r\n                <div className=\"App-section\">\r\n                  {\r\n                    visablestatus.visable ?\r\n                      <Location placeData={placeData} bounds={bounds} height={770}></Location>\r\n                      :\r\n                      <>\r\n                        <a class=\"button is-small is-link\" style={{ marginBottom: 1 + 'em' }} onClick={searchPlaces}>돌아가기</a>\r\n                        <iframe src={visablestatus.url} width='100%' height='750px' ></iframe>\r\n                      </>\r\n                  }\r\n                </div>\r\n                <hr></hr>\r\n              </div>\r\n\r\n              {/* 모바일 지도영역 및 세부정보*/}\r\n              <div class=\"column is-hidden-desktop\">\r\n                <div className=\"App-section-mobile\" ref={mobileMap}>\r\n                  {\r\n                    visablestatus.visable ?\r\n                      <Location placeData={placeData} bounds={bounds} height={300}></Location>\r\n                      :\r\n                      <>\r\n                        <a class=\"button is-small is-link\" style={{ marginBottom: 1 + 'em' }} onClick={searchPlaces}>돌아가기</a>\r\n                        <iframe src={visablestatus.url} width='100%' height='300px' ></iframe>\r\n                      </>\r\n                  }\r\n                </div>\r\n                <hr></hr>\r\n              </div>\r\n\r\n              {/* 데스크탑검색결과 리스트 */}\r\n              <div class=\"column\">\r\n                <div className=\"App-aside\">\r\n                  <List resultData={resultData}></List>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n\r\n      }\r\n\r\n      {/* \r\n      <hr></hr>\r\n      <div class=\"columns is-desktop\">\r\n        <div class=\"column is-full\">\r\n          <div className=\"App-footer\">\r\n            History\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nimport ContextProvider from \"./context.js\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}